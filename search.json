[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 roxylint authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Doug Kelkhoff. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kelkhoff D (2023). roxylint: Lint 'roxygen2'-generated documentation. R package version 0.0.0.9000.","code":"@Manual{,   title = {roxylint: Lint 'roxygen2'-generated documentation},   author = {Doug Kelkhoff},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"roxylint","dir":"","previous_headings":"","what":"Lint roxygen2-generated documentation","title":"Lint roxygen2-generated documentation","text":"Lint ‘roxygen2’-generated documentation","code":""},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Lint roxygen2-generated documentation","text":"Modify package’s description file add required package roxygen2 documentation DESCRIPTION default, add linters tidyverse style guide. ’d like explicit, can declare style : DESCRIPTION Now, next time document package, might see messages formatting!","code":"Config/Needs/documentation: roxylint Roxygen: list(markdown = TRUE, roclets = c(\"namespace\", \"rd\", \"roxylint::roxylint\")) Config/roxylint: list(linters = roxylint::tidy)"},{"path":"/index.html","id":"tune-your-linting","dir":"","previous_headings":"","what":"Tune your Linting","title":"Lint roxygen2-generated documentation","text":"can add linters easily. Simply modify linters field configuration list. course, feel linter widely useful, feel free open pull request introduce . However, since structuring code DESCRIPTION file pleasant, can instead store configurations man/roxylint/meta.R. example, might look something like : man/roxytypes/meta.R place, ’ll start getting alerts ’re deviating style.","code":"list(   linters = list(     # pick and choose your tidy lints     return = roxylint::lint_sentence_case,      # use regular expressions to set simple rules     title = \"!!!$\",      # add custom messages with named lists     details = list(       \"details should be in 'ALL CAPS'\" = \"^[[:upper:] ]*$\"     ),      # use functions for fine-grained control     param = function(x, name, description, ...) {       n_caps <- nchar(gsub(\"[^[:upper:]]\", \"\", description))       if (n_caps < nchar(description) / 2)         warning(\"descriptions should be at least 50% CaPiTALiZeD\")     }   ) ) ℹ [config.R:12] @title raw value does not match '!!!$' ℹ [config.R:17] @param descriptions should be at least 50% CaPiTALiZeD ℹ [linters.R:7] @details details should be in 'ALL CAPS' ℹ [roxy_tag_rd.R:1] @title raw value does not match '!!!$' ℹ [roxy_tag_rd.R:7] @return descriptions should be 'Sentence case' and end in a period"},{"path":"/reference/check_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply 'roxygen2' linters — check_linter","title":"Apply 'roxygen2' linters — check_linter","text":"Provided list linters given tag, iterate linters raise alerts documentation process.","code":""},{"path":"/reference/check_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply 'roxygen2' linters — check_linter","text":"","code":"check_linter(linters, tag, ...)  # S3 method for default check_linter(linters, tag, ...)  # S3 method for list check_linter(linters, tag, ...)  # S3 method for `function` check_linter(linters, tag, ...)  # S3 method for character check_linter(linters, tag, message = NULL, ...)"},{"path":"/reference/check_linter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply 'roxygen2' linters — check_linter","text":"linters linters specification, either function character regular expression matched, list either. See details information. tag roxygen2::roxy_tag(). ... Additional arguments unused. message optional message use alert.","code":""},{"path":"/reference/check_linter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply 'roxygen2' linters — check_linter","text":"TRUE, invisibly. However, function primarily used side-effect raising alerts documentation.","code":""},{"path":"/reference/check_linter.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Apply 'roxygen2' linters — check_linter","text":"check_linter(default): default, linting performed check_linter(list): list functions character regular expressions. character value named, name used message alert raised expression match. check_linter(`function`): function evaluate given tag function's evaluated following arguments: roxygen2::roxy_tag() contents tag's $val, named arguments number arguments might readily apparent, function accept trailing ... argument. Provided functions may print lint output, signal lint output messages warnings. cli::cli_alert() reflect severity function used emit output. check_linter(character): character regular expressions. character value found, value assumed regular expression must match given tag's raw content (text appears roxygen2 header).","code":""},{"path":"/reference/config.html","id":null,"dir":"Reference","previous_headings":"","what":"Configuration — config","title":"Configuration — config","text":"Various functions loading, caching performing configured behaviors using user-supplied configuration file.","code":""},{"path":"/reference/config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configuration — config","text":"","code":".state  config_load()  config_find_from(path)  config_from_desc(path)  config_from_file(path)"},{"path":"/reference/config.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Configuration — config","text":"object class environment length 0.","code":""},{"path":"/reference/config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configuration — config","text":"path file path use searching config file. Either file path DESCRIPTION root path package, depending context function.","code":""},{"path":"/reference/config.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Configuration — config","text":"config_load(): Load contents config environment config_find_from(): Load configuration path config_from_desc(): Load configuration DESCRIPTION file config_from_file(): Load configuration dotfile","code":""},{"path":"/reference/demo_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Get that tag! — demo_tag","title":"Get that tag! — demo_tag","text":"Tools inspecting roxygen2::roxy_tag()s. can helpful exploring intermediate tag objects. example, can use function generate tag explore named values $val.","code":""},{"path":"/reference/demo_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get that tag! — demo_tag","text":"","code":"demo_tag(str)"},{"path":"/reference/demo_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get that tag! — demo_tag","text":"str 'roxygen2' tag string.","code":""},{"path":"/reference/demo_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get that tag! — demo_tag","text":"roxygen2::roxy_tag()","code":""},{"path":"/reference/demo_tag.html","id":"test","dir":"Reference","previous_headings":"","what":"test","title":"Get that tag! — demo_tag","text":"1234","code":""},{"path":"/reference/demo_tag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get that tag! — demo_tag","text":"","code":"demo_tag(\"@param var abc\") #> [<text>:  1] @param 'var abc' {parsed}"},{"path":"/reference/format_tag_prefix.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a tag for alert context — format_tag_prefix","title":"Format a tag for alert context — format_tag_prefix","text":"Format tag alert context","code":""},{"path":"/reference/format_tag_prefix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a tag for alert context — format_tag_prefix","text":"","code":"format_tag_prefix(x)"},{"path":"/reference/format_tag_prefix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a tag for alert context — format_tag_prefix","text":"x roxygen2::roxy_tag().","code":""},{"path":"/reference/format_tag_prefix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a tag for alert context — format_tag_prefix","text":"formatted string","code":""},{"path":"/reference/if-not-null-else.html","id":null,"dir":"Reference","previous_headings":"","what":"If-not-null-else — if-not-null-else","title":"If-not-null-else — if-not-null-else","text":"--null-else","code":""},{"path":"/reference/if-not-null-else.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"If-not-null-else — if-not-null-else","text":"","code":"lhs %||% rhs"},{"path":"/reference/into_roxy_alert.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture output and re-emit as a cli alert — into_roxy_alert","title":"Capture output and re-emit as a cli alert — into_roxy_alert","text":"Capture output re-emit cli alert","code":""},{"path":"/reference/into_roxy_alert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capture output and re-emit as a cli alert — into_roxy_alert","text":"","code":"into_roxy_alert(tag, expr)"},{"path":"/reference/into_roxy_alert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capture output and re-emit as a cli alert — into_roxy_alert","text":"tag roxygen2::roxy_tag() use context alert. expr expression evaluate.","code":""},{"path":"/reference/into_roxy_alert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capture output and re-emit as a cli alert — into_roxy_alert","text":"TRUE, invisibly.","code":""},{"path":"/reference/linters.html","id":null,"dir":"Reference","previous_headings":"","what":"Linters — linters","title":"Linters — linters","text":"Preconfigured linters, either collective list linters individually. \"tidy\" linters implement guidelines tidyverse style guide.","code":""},{"path":"/reference/linters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linters — linters","text":"","code":"lint_sentence_case(x, ...)  tidy_title(x, ...)  tidy_param(x, name, description, ...)  tidy"},{"path":"/reference/linters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Linters — linters","text":"object class list length 2.","code":""},{"path":"/reference/linters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linters — linters","text":"x roxygen2::roxy_tag() prompted lint. ... Additional arguments unused. name, description Used roxygen2::roxy_tag()-specific linters.","code":""},{"path":"/reference/linters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linters — linters","text":"Refer individual roxygen2::roxy_tag() respective tag argument details.","code":""},{"path":"/reference/linters.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Linters — linters","text":"lint_sentence_case(): Lint sentence case (uses $raw roxygen2::roxy_tag()s) tidy_title(): Tidy 'Sentence case' titles tidy_param(): Tidy 'Sentence case' @param definitions tidy: list tidyverse style guide inspired linters","code":""},{"path":"/reference/roxylint.html","id":null,"dir":"Reference","previous_headings":"","what":"Roclet for 'roxygen2' style linting — roxylint","title":"Roclet for 'roxygen2' style linting — roxylint","text":"Roclet 'roxygen2' style linting","code":""},{"path":"/reference/roxylint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roclet for 'roxygen2' style linting — roxylint","text":"","code":"roxylint()  roclet_process.roclet_roxylint(x, blocks, env, base_path)  roclet_output.roclet_roxylint(...)"},{"path":"/reference/roxylint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Roclet for 'roxygen2' style linting — roxylint","text":"x roclet object. blocks list roxy_block objects. env Package environment. base_path Path root source package. ... Additional arguments unused.","code":""},{"path":"/reference/roxylint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Roclet for 'roxygen2' style linting — roxylint","text":"roxylint  roxygen2::roclet(). NULL NULL","code":""},{"path":"/reference/roxylint.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Roclet for 'roxygen2' style linting — roxylint","text":"roclet_process.roclet_roxylint(): tag scanned 'roxygen2', apply linters roclet_output.roclet_roxylint(): Unused","code":""}]
